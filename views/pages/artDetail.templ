package pages

import "github.com/DeepAung/deep-art/views/layouts"
import "github.com/DeepAung/deep-art/api/types"
import "github.com/DeepAung/deep-art/views/components"
import "fmt"

templ ArtDetail(user types.User, art types.Art, isFollowing, isStarred, isBought bool) {
	@layouts.WithNav(layouts.Buyer, user) {
		<div class="flex flex-col gap-4 p-4 pt-0">
			<div>
				<a href="/home" class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-white dark:hover:bg-neutral-800">
					<i class="fa-solid fa-chevron-left"></i>
					Back
				</a>
			</div>
			<div class="relative w-full h-[70vh]">
				<img class="w-full h-full object-contain rounded-xl" src={ art.CoverURL } alt={ art.Name }/>
			</div>
			<div class="flex flex-col sm:flex-row items-center justify-between gap-4">
				<div class="text-xs flex items-center gap-3">
					@components.Avatar(art.Creator.AvatarURL, art.Creator.Username, 50)
					<a href={ templ.SafeURL(fmt.Sprint("/creators/", art.CreatorID)) } class="p-2 rounded-md hover:bg-gray-100">
						<h3 class="font-semibold text-gray-800 dark:text-white">{ art.Creator.Username }</h3>
						<p class="font-medium text-gray-400 dark:text-neutral-500">{ fmt.Sprint(art.Creator.Followers, " Followers") }</p>
					</a>
					@components.FollowButton(art.Creator.Id, isFollowing)
				</div>
				<div class="text-sm flex items-center gap-3">
					if art.Price == 0 {
						<p>Free</p>
					} else {
						<p>{ fmt.Sprint(art.Price) } Coin</p>
						@components.BuyButton(int(*art.ID), int(art.Price), isBought)
					}
					@components.StarButton(int(*art.ID), isStarred)
					<button type="button" class="py-3 px-4 inline-flex items-center gap-x-2 font-semibold rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none" disabled?={ art.Price != 0 && !isBought }>
						<i class="fa-solid fa-download"></i>
						Download
					</button>
				</div>
			</div>
			<h1 class="text-4xl text-center font-bold text-gray-800">{ art.Name }</h1>
			<p class="text-lg text-center text-grey-300"><em>{ art.Description }</em></p>
			<div class="flex justify-center gap-2">
				for _, tag := range art.Tags {
					<span class="inline-flex items-center gap-x-1.5 py-1.5 px-3 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-800/30 dark:text-blue-500">{ tag.Name }</span>
				}
			</div>
			<div class="flex flex-col items-center justify-center sm:flex-row gap-4 mt-4">
				<ul class="marker:text-blue-600 list-disc ps-5 space-y-2 text-gray-600 dark:text-neutral-400">
					<li><span class="font-bold text-gray-800">{ fmt.Sprint(art.TotalDownloads) }</span> Downloads in Total</li>
					<li><span class="font-bold text-gray-800">{ fmt.Sprint(art.TotalDownloads) }</span> Downloads this Week</li>
					<li><span class="font-bold text-gray-800">{ fmt.Sprint(art.TotalDownloads) }</span> Downloads this Month</li>
					<li><span class="font-bold text-gray-800">{ fmt.Sprint(art.TotalDownloads) }</span> Downloads this Year</li>
				</ul>
				<ul class="marker:text-blue-600 list-disc ps-5 space-y-2 text-gray-600 dark:text-neutral-400">
					<li><span class="font-bold text-gray-800">{ fmt.Sprint(art.TotalStars) }</span> Stars in Total</li>
					<li><span class="font-bold text-gray-800">{ fmt.Sprint(art.TotalStars) }</span> Stars this Week</li>
					<li><span class="font-bold text-gray-800">{ fmt.Sprint(art.TotalStars) }</span> Stars this Month</li>
					<li><span class="font-bold text-gray-800">{ fmt.Sprint(art.TotalStars) }</span> Stars this Year</li>
				</ul>
			</div>
		</div>
	}
}
